<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Cyanilux</title>
    <link>https://www.cyanilux.com/</link>
    <description>Recent content in Home on Cyanilux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 12 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.cyanilux.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Scene Color</title>
      <link>https://www.cyanilux.com/tutorials/scene-color/</link>
      <pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/scene-color/</guid>
      <description>Sorry this post is under construction.
For now, refer to https://cyangamedev.wordpress.com/2019/06/01/scene-color-depth-nodes/</description>
    </item>
    
    <item>
      <title>Fire Shader Breakdown</title>
      <link>https://www.cyanilux.com/tutorials/fire-shader-breakdown/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/fire-shader-breakdown/</guid>
      <description>if (cookiesAccepted){document.write(&#34;\u003cblockquote class=\&#34;twitter-tweet\&#34; data-dnt=\&#34;true\&#34; data-theme=\&#34;dark\&#34;\u003e\u003cp lang=\&#34;en\&#34; dir=\&#34;ltr\&#34;\u003eHey! Wrote a breakdown of a fire shader that uses noise for a distortion effect (similar to the stylised fire in RiME). I\u0026#39;ve had this shader for a while but never got around to a proper breakdown, until now! üî•üî• \u003ca href=\&#34;https://twitter.com/hashtag/Unity3D?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#Unity3D\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shadergraph?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shadergraph\u003c/a\u003e\u003cbr\u003e\u003cbr\u003eüîó \u003ca href=\&#34;https://t.co/qDK4BkdXI7\&#34;\u003ehttps://t.co/qDK4BkdXI7\u003c/a\u003e \u003ca href=\&#34;https://t.co/eDHyRYOJo2\&#34;\u003epic.twitter.com/eDHyRYOJo2\u003c/a\u003e\u003c/p\u003e\u0026mdash; Cyan (@Cyanilux) \u003ca href=\&#34;https://twitter.com/Cyanilux/status/1290620434967334912?ref_src=twsrc%5Etfw\&#34;\u003eAugust 4, 2020\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\&#34;https://platform.twitter.com/widgets.js\&#34; charset=\&#34;utf-8\&#34;\u003e\u003c/script\u003e\n&#34;);}else{document.write(&#34;https://twitter.com/Cyanilux/status/1290620434967334912&#34;+&#34;Cookies are not accepted so cannot show embedded tweet.</description>
    </item>
    
    <item>
      <title>Sprite Glow/Outline Shader Breakdown</title>
      <link>https://www.cyanilux.com/tutorials/sprite-outline-shader-breakdown/</link>
      <pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/sprite-outline-shader-breakdown/</guid>
      <description>if (cookiesAccepted){document.write(&#34;\u003cblockquote class=\&#34;twitter-tweet\&#34; data-dnt=\&#34;true\&#34; data-theme=\&#34;dark\&#34;\u003e\u003cp lang=\&#34;en\&#34; dir=\&#34;ltr\&#34;\u003eHey! Just released a new blog post! Outline/Glow effects for sprites, created using a signed(-ish) distance field stored in the alpha channel! üî•üßô‚Äç‚ôÇÔ∏è \u003ca href=\&#34;https://twitter.com/hashtag/unity3d?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#unity3d\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shadergraph?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shadergraph\u003c/a\u003e\u003cbr\u003e\u003cbr\u003eüîó \u003ca href=\&#34;https://t.co/4ATZneyLmi\&#34;\u003ehttps://t.co/4ATZneyLmi\u003c/a\u003e\u003cbr\u003e\u003cbr\u003eI also have a discord now too! ‚ú®\u003cbr\u003eüí¨ \u003ca href=\&#34;https://t.co/r48mrIB23M\&#34;\u003ehttps://t.co/r48mrIB23M\u003c/a\u003e \u003ca href=\&#34;https://t.co/rP9vB6e6OU\&#34;\u003epic.twitter.com/rP9vB6e6OU\u003c/a\u003e\u003c/p\u003e\u0026mdash; Cyan (@Cyanilux) \u003ca href=\&#34;https://twitter.com/Cyanilux/status/1238442774992650249?ref_src=twsrc%5Etfw\&#34;\u003eMarch 13, 2020\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\&#34;https://platform.twitter.com/widgets.js\&#34; charset=\&#34;utf-8\&#34;\u003e\u003c/script\u003e\n&#34;);}else{document.write(&#34;https://twitter.com/Cyanilux/status/1238442774992650249&#34;+&#34;Cookies are not accepted so cannot show embedded tweet.
&#34;+&#34;Click here to show cookie dialog if you want to change that</description>
    </item>
    
    <item>
      <title>Sprite Stencil Overlay Breakdown</title>
      <link>https://www.cyanilux.com/tutorials/sprite-stencil-overlay-breakdown/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/sprite-stencil-overlay-breakdown/</guid>
      <description>if (cookiesAccepted){document.write(&#34;\u003cblockquote class=\&#34;twitter-tweet\&#34; data-dnt=\&#34;true\&#34; data-theme=\&#34;dark\&#34;\u003e\u003cp lang=\&#34;en\&#34; dir=\&#34;ltr\&#34;\u003eHelped someone out on the Unity discord, with a Stencil-based effect for sprites, using the Forward Renderer \u0026quot;RenderObjects\u0026quot; feature.\u003cbr\u003e\u003cbr\u003eThought I might as well write it up as a blog post, so enjoy!\u003ca href=\&#34;https://twitter.com/hashtag/Unity3D?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#Unity3D\u003c/a\u003e (partly \u003ca href=\&#34;https://twitter.com/hashtag/shadergraph?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shadergraph\u003c/a\u003e)\u003cbr\u003e\u003cbr\u003eüîó \u003ca href=\&#34;https://t.co/DHMnFUMMC2\&#34;\u003ehttps://t.co/DHMnFUMMC2\u003c/a\u003e \u003ca href=\&#34;https://t.co/545KjqbRJ9\&#34;\u003epic.twitter.com/545KjqbRJ9\u003c/a\u003e\u003c/p\u003e\u0026mdash; Cyan (@Cyanilux) \u003ca href=\&#34;https://twitter.com/Cyanilux/status/1231963278622052358?ref_src=twsrc%5Etfw\&#34;\u003eFebruary 24, 2020\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\&#34;https://platform.twitter.com/widgets.js\&#34; charset=\&#34;utf-8\&#34;\u003e\u003c/script\u003e\n&#34;);}else{document.write(&#34;https://twitter.com/Cyanilux/status/1231963278622052358&#34;+&#34;Cookies are not accepted so cannot show embedded tweet.
&#34;+&#34;Click here to show cookie dialog if you want to change that</description>
    </item>
    
    <item>
      <title>Dissolve Shader Breakdown</title>
      <link>https://www.cyanilux.com/tutorials/dissolve-shader-breakdown/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/dissolve-shader-breakdown/</guid>
      <description>if (cookiesAccepted){document.write(&#34;\u003cblockquote class=\&#34;twitter-tweet\&#34; data-dnt=\&#34;true\&#34; data-theme=\&#34;dark\&#34;\u003e\u003cp lang=\&#34;en\&#34; dir=\&#34;ltr\&#34;\u003ePlaying around with dissolve shader effects. ‚ú®\u003ca href=\&#34;https://twitter.com/hashtag/unity3D?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#unity3D\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/madewithunity?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#madewithunity\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shaders?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shaders\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shadergraph?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shadergraph\u003c/a\u003e \u003ca href=\&#34;https://t.co/BoZb5Avimv\&#34;\u003epic.twitter.com/BoZb5Avimv\u003c/a\u003e\u003c/p\u003e\u0026mdash; Cyan (@Cyanilux) \u003ca href=\&#34;https://twitter.com/Cyanilux/status/1223248180281774091?ref_src=twsrc%5Etfw\&#34;\u003eJanuary 31, 2020\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\&#34;https://platform.twitter.com/widgets.js\&#34; charset=\&#34;utf-8\&#34;\u003e\u003c/script\u003e\n&#34;);}else{document.write(&#34;https://twitter.com/Cyanilux/status/1223248180281774091&#34;+&#34;Cookies are not accepted so cannot show embedded tweet.
&#34;+&#34;Click here to show cookie dialog if you want to change that
&#34;);} Intro This shader effect uses noise and step functions to discard pixels (and for colouring edges) to create a dissolve effect.</description>
    </item>
    
    <item>
      <title>Toon Glass Shader Breakdown</title>
      <link>https://www.cyanilux.com/tutorials/toon-glass-shader-breakdown/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/toon-glass-shader-breakdown/</guid>
      <description>if (cookiesAccepted){document.write(&#34;\u003cblockquote class=\&#34;twitter-tweet\&#34; data-dnt=\&#34;true\&#34; data-theme=\&#34;dark\&#34;\u003e\u003cp lang=\&#34;en\&#34; dir=\&#34;ltr\&#34;\u003ePlaying around with a toon window/glass effect, with diagonal lines that move with the camera to show the surface is reflective. üîé \u003ca href=\&#34;https://twitter.com/hashtag/unity3D?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#unity3D\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/madewithunity?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#madewithunity\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shaders?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shaders\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shadergraph?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shadergraph\u003c/a\u003e \u003ca href=\&#34;https://t.co/kzaW0LGh9N\&#34;\u003epic.twitter.com/kzaW0LGh9N\u003c/a\u003e\u003c/p\u003e\u0026mdash; Cyan (@Cyanilux) \u003ca href=\&#34;https://twitter.com/Cyanilux/status/1177545990708039681?ref_src=twsrc%5Etfw\&#34;\u003eSeptember 27, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\&#34;https://platform.twitter.com/widgets.js\&#34; charset=\&#34;utf-8\&#34;\u003e\u003c/script\u003e\n&#34;);}else{document.write(&#34;https://twitter.com/Cyanilux/status/1177545990708039681&#34;+&#34;Cookies are not accepted so cannot show embedded tweet.
&#34;+&#34;Click here to show cookie dialog if you want to change that</description>
    </item>
    
    <item>
      <title>Fog Plane Shader Breakdown</title>
      <link>https://www.cyanilux.com/tutorials/fog-plane-shader-breakdown/</link>
      <pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/fog-plane-shader-breakdown/</guid>
      <description>if (cookiesAccepted){document.write(&#34;\u003cblockquote class=\&#34;twitter-tweet\&#34; data-dnt=\&#34;true\&#34; data-theme=\&#34;dark\&#34;\u003e\u003cp lang=\&#34;en\&#34; dir=\&#34;ltr\&#34;\u003eWorking on a new \u003ca href=\&#34;https://twitter.com/hashtag/shadergraph?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shadergraph\u003c/a\u003e blog post / tutorial that uses depth to produce a fog shader effect. üëÄ \u003ca href=\&#34;https://twitter.com/hashtag/unity3D?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#unity3D\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shaders?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shaders\u003c/a\u003e \u003ca href=\&#34;https://t.co/ggQfff9GE0\&#34;\u003epic.twitter.com/ggQfff9GE0\u003c/a\u003e\u003c/p\u003e\u0026mdash; Cyan (@Cyanilux) \u003ca href=\&#34;https://twitter.com/Cyanilux/status/1202301115808833538?ref_src=twsrc%5Etfw\&#34;\u003eDecember 4, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\&#34;https://platform.twitter.com/widgets.js\&#34; charset=\&#34;utf-8\&#34;\u003e\u003c/script\u003e\n&#34;);}else{document.write(&#34;https://twitter.com/Cyanilux/status/1202301115808833538&#34;+&#34;Cookies are not accepted so cannot show embedded tweet.
&#34;+&#34;Click here to show cookie dialog if you want to change that
&#34;);} Intro This post includes two examples to produce fog shader effects.</description>
    </item>
    
    <item>
      <title>Cloud Shader Breakdown</title>
      <link>https://www.cyanilux.com/tutorials/cloud-shader-breakdown/</link>
      <pubDate>Wed, 25 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/cloud-shader-breakdown/</guid>
      <description>if (cookiesAccepted){document.write(&#34;\u003cblockquote class=\&#34;twitter-tweet\&#34; data-dnt=\&#34;true\&#34; data-theme=\&#34;dark\&#34;\u003e\u003cp lang=\&#34;en\&#34; dir=\&#34;ltr\&#34;\u003eSaw a few others doing cloud shaders last week, so I might as well join in! Really happy with how this turned out. ‚òÅÔ∏èüå•Ô∏è‚òÅÔ∏è (See thread for \u003ca href=\&#34;https://twitter.com/hashtag/shadergraph?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shadergraph\u003c/a\u003e + info) \u003ca href=\&#34;https://twitter.com/hashtag/unity3D?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#unity3D\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/madewithunity?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#madewithunity\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shaders?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shaders\u003c/a\u003e \u003ca href=\&#34;https://t.co/LfUDykwtix\&#34;\u003epic.twitter.com/LfUDykwtix\u003c/a\u003e\u003c/p\u003e\u0026mdash; Cyan (@Cyanilux) \u003ca href=\&#34;https://twitter.com/Cyanilux/status/1172472087673393152?ref_src=twsrc%5Etfw\&#34;\u003eSeptember 13, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\&#34;https://platform.twitter.com/widgets.js\&#34; charset=\&#34;utf-8\&#34;\u003e\u003c/script\u003e\n&#34;);}else{document.write(&#34;https://twitter.com/Cyanilux/status/1172472087673393152&#34;+&#34;Cookies are not accepted so cannot show embedded tweet.
&#34;+&#34;Click here to show cookie dialog if you want to change that</description>
    </item>
    
    <item>
      <title>Forcefield Shader Breakdown</title>
      <link>https://www.cyanilux.com/tutorials/forcefield-shader-breakdown/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/forcefield-shader-breakdown/</guid>
      <description>if (cookiesAccepted){document.write(&#34;\u003cblockquote class=\&#34;twitter-tweet\&#34; data-dnt=\&#34;true\&#34; data-theme=\&#34;dark\&#34;\u003e\u003cp lang=\&#34;en\&#34; dir=\&#34;ltr\&#34;\u003eHey! This week I\u0026#39;ve been making Jellyfish, animated using vertex displacement in the shader. Inspired by the amazing work by \u003ca href=\&#34;https://twitter.com/ZappForThat?ref_src=twsrc%5Etfw\&#34;\u003e@ZappForThat\u003c/a\u003e! ü§© \u003ca href=\&#34;https://twitter.com/hashtag/unity3D?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#unity3D\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/madewithunity?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#madewithunity\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shaders?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shaders\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shadergraph?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shadergraph\u003c/a\u003e \u003ca href=\&#34;https://t.co/NQH2wb5X3O\&#34;\u003epic.twitter.com/NQH2wb5X3O\u003c/a\u003e\u003c/p\u003e\u0026mdash; Cyan üéÉ (@Cyanilux) \u003ca href=\&#34;https://twitter.com/Cyanilux/status/1136953667477757953?ref_src=twsrc%5Etfw\&#34;\u003eJune 7, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\&#34;https://platform.twitter.com/widgets.js\&#34; charset=\&#34;utf-8\&#34;\u003e\u003c/script\u003e\n&#34;);}else{document.write(&#34;https://twitter.com/Cyanilux/status/1136953667477757953&#34;+&#34;Cookies are not accepted so cannot show embedded tweet.
&#34;+&#34;Click here to show cookie dialog if you want to change that</description>
    </item>
    
    <item>
      <title>Forcefield Shader Breakdown (Simple)</title>
      <link>https://www.cyanilux.com/tutorials/forcefield-shader-breakdown-simple/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/forcefield-shader-breakdown-simple/</guid>
      <description>Intro This shader uses a rim / fresnel and the camera&amp;rsquo;s depth texture to produce a simple forcefield (or energy shield) that has glowing edges and intersections with objects in the scene. We could also add scrolling textures to make the glow and sides of the forcefield more interesting although we won‚Äôt be going through that in this post.
Notes  This is an Unlit shader. Transparent surface mode and Alpha blending.</description>
    </item>
    
    <item>
      <title>Jellyfish Shader Breakdown</title>
      <link>https://www.cyanilux.com/tutorials/jellyfish-shader-breakdown/</link>
      <pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/jellyfish-shader-breakdown/</guid>
      <description>if (cookiesAccepted){document.write(&#34;\u003cblockquote class=\&#34;twitter-tweet\&#34; data-dnt=\&#34;true\&#34; data-theme=\&#34;dark\&#34;\u003e\u003cp lang=\&#34;en\&#34; dir=\&#34;ltr\&#34;\u003eHey! This week I\u0026#39;ve been making Jellyfish, animated using vertex displacement in the shader. Inspired by the amazing work by \u003ca href=\&#34;https://twitter.com/ZappForThat?ref_src=twsrc%5Etfw\&#34;\u003e@ZappForThat\u003c/a\u003e! ü§© \u003ca href=\&#34;https://twitter.com/hashtag/unity3D?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#unity3D\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/madewithunity?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#madewithunity\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shaders?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shaders\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shadergraph?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shadergraph\u003c/a\u003e \u003ca href=\&#34;https://t.co/NQH2wb5X3O\&#34;\u003epic.twitter.com/NQH2wb5X3O\u003c/a\u003e\u003c/p\u003e\u0026mdash; Cyan üéÉ (@Cyanilux) \u003ca href=\&#34;https://twitter.com/Cyanilux/status/1136953667477757953?ref_src=twsrc%5Etfw\&#34;\u003eJune 7, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\&#34;https://platform.twitter.com/widgets.js\&#34; charset=\&#34;utf-8\&#34;\u003e\u003c/script\u003e\n&#34;);}else{document.write(&#34;https://twitter.com/Cyanilux/status/1136953667477757953&#34;+&#34;Cookies are not accepted so cannot show embedded tweet.
&#34;+&#34;Click here to show cookie dialog if you want to change that</description>
    </item>
    
    <item>
      <title>Vertex Displacement</title>
      <link>https://www.cyanilux.com/tutorials/vertex-displacement/</link>
      <pubDate>Fri, 14 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/vertex-displacement/</guid>
      <description>Shader Stages While fragment shaders provide colours for each fragment/pixel, we can use vertex shaders to offset the vertices of the mesh. In Shader Graph, nodes that are connected to the Master node&amp;rsquo;s Vertex ports are written to this vertex shader stage.
When attempting to connect a node between the vertex and fragment stages, they sometimes may not connect. It is usually a good idea to keep the two parts as separate as possible.</description>
    </item>
    
    <item>
      <title>Water Shader Breakdown</title>
      <link>https://www.cyanilux.com/tutorials/water-shader-breakdown/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/water-shader-breakdown/</guid>
      <description>if (cookiesAccepted){document.write(&#34;\u003cblockquote class=\&#34;twitter-tweet\&#34; data-dnt=\&#34;true\&#34; data-theme=\&#34;dark\&#34;\u003e\u003cp lang=\&#34;en\&#34; dir=\&#34;ltr\&#34;\u003eHey! Wanted to use the \u0026#39;Scene Color\u0026#39; and \u0026#39;Scene Depth\u0026#39; nodes a bit, which developed into this water shader. It\u0026#39;s all drawn to the plane so the camera can\u0026#39;t go below the surface, but it looks cool. üåä\u003ca href=\&#34;https://twitter.com/hashtag/unity3D?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#unity3D\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/madewithunity?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#madewithunity\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shaders?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shaders\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shadergraph?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shadergraph\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/VFX?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#VFX\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/VFXFriday?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#VFXFriday\u003c/a\u003e \u003ca href=\&#34;https://t.co/laRjwMXmFk\&#34;\u003epic.twitter.com/laRjwMXmFk\u003c/a\u003e\u003c/p\u003e\u0026mdash; Cyan üéÉ (@Cyanilux) \u003ca href=\&#34;https://twitter.com/Cyanilux/status/1134420880891809793?ref_src=twsrc%5Etfw\&#34;\u003eMay 31, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\&#34;https://platform.twitter.com/widgets.js\&#34; charset=\&#34;utf-8\&#34;\u003e\u003c/script\u003e\n&#34;);}else{document.</description>
    </item>
    
    <item>
      <title>Whirlpool Shader Breakdown</title>
      <link>https://www.cyanilux.com/tutorials/whirlpool-shader-breakdown/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/whirlpool-shader-breakdown/</guid>
      <description>if (cookiesAccepted){document.write(&#34;\u003cblockquote class=\&#34;twitter-tweet\&#34; data-dnt=\&#34;true\&#34; data-theme=\&#34;dark\&#34;\u003e\u003cp lang=\&#34;en\&#34; dir=\&#34;ltr\&#34;\u003eHey! Been playing around with \u003ca href=\&#34;https://twitter.com/hashtag/shadergraph?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shadergraph\u003c/a\u003e and polar coordinates more and made a stylised whirlpool shader! üåäüåÄI\u0026#39;ll be writing this up on my blog soon(ish)! \u003ca href=\&#34;https://twitter.com/hashtag/unity3D?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#unity3D\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/madewithunity?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#madewithunity\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shaders?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shaders\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/VFX?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#VFX\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/VFXFriday?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#VFXFriday\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/gamedev?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#gamedev\u003c/a\u003e \u003ca href=\&#34;https://t.co/czsoRNmltA\&#34;\u003epic.twitter.com/czsoRNmltA\u003c/a\u003e\u003c/p\u003e\u0026mdash; Cyan üéÉ (@Cyanilux) \u003ca href=\&#34;https://twitter.com/Cyanilux/status/1131883139301859329?ref_src=twsrc%5Etfw\&#34;\u003eMay 24, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\&#34;https://platform.twitter.com/widgets.js\&#34; charset=\&#34;utf-8\&#34;\u003e\u003c/script\u003e\n&#34;);}else{document.write(&#34;https://twitter.com/Cyanilux/status/1131883139301859329&#34;+&#34;Cookies are not accepted so cannot show embedded tweet.
&#34;+&#34;</description>
    </item>
    
    <item>
      <title>Hologram Shader Breakdown</title>
      <link>https://www.cyanilux.com/tutorials/hologram-shader-breakdown/</link>
      <pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/hologram-shader-breakdown/</guid>
      <description>if (cookiesAccepted){document.write(&#34;\u003cblockquote class=\&#34;twitter-tweet\&#34; data-dnt=\&#34;true\&#34; data-theme=\&#34;dark\&#34;\u003e\u003cp lang=\&#34;en\&#34; dir=\&#34;ltr\&#34;\u003eCreated a Hologram shader (in \u003ca href=\&#34;https://twitter.com/hashtag/shadergraph?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shadergraph\u003c/a\u003e). It\u0026#39;s really simple but I love this effect. üòçüåê\u003ca href=\&#34;https://twitter.com/hashtag/unity3D?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#unity3D\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/madewithunity?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#madewithunity\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shaders?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shaders\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/VFX?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#VFX\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/VFXFriday?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#VFXFriday\u003c/a\u003e \u003ca href=\&#34;https://t.co/DgrhZv9l1w\&#34;\u003epic.twitter.com/DgrhZv9l1w\u003c/a\u003e\u003c/p\u003e\u0026mdash; Cyan üéÉ (@Cyanilux) \u003ca href=\&#34;https://twitter.com/Cyanilux/status/1126814494058061824?ref_src=twsrc%5Etfw\&#34;\u003eMay 10, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\&#34;https://platform.twitter.com/widgets.js\&#34; charset=\&#34;utf-8\&#34;\u003e\u003c/script\u003e\n&#34;);}else{document.write(&#34;https://twitter.com/Cyanilux/status/1126814494058061824&#34;+&#34;Cookies are not accepted so cannot show embedded tweet.
&#34;+&#34;Click here to show cookie dialog if you want to change that
&#34;);} Intro This hologram shader is based on using sine and/or fraction (known as frac() in HLSL) functions on the world space Y position in order to produce a repeating set of horizontal lines, similar to scanlines.</description>
    </item>
    
    <item>
      <title>Polar Coordinates</title>
      <link>https://www.cyanilux.com/tutorials/polar-coordinates/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/polar-coordinates/</guid>
      <description>When using UVs you are usually using the Cartesian coordinate system, or something similar to it at least. Pixels along the X or U axis start at 0 and increase to 1 horizontally, and the same goes for the Y or V axis but vertically. We can then offset (Add or Subtract) and scale (Multiply or Divide) these UVs to manipulate how a texture is sampled.
We can use the Polar Coordinates node to convert these Cartesian coordinates into a Polar coordinate system.</description>
    </item>
    
    <item>
      <title>Portal Shader Breakdown</title>
      <link>https://www.cyanilux.com/tutorials/portal-shader-breakdown/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/portal-shader-breakdown/</guid>
      <description>if (cookiesAccepted){document.write(&#34;\u003cblockquote class=\&#34;twitter-tweet\&#34; data-dnt=\&#34;true\&#34; data-theme=\&#34;dark\&#34;\u003e\u003cp lang=\&#34;en\&#34; dir=\&#34;ltr\&#34;\u003eMade a portal/wormhole effect! üåÄ\u003ca href=\&#34;https://twitter.com/hashtag/unity3D?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#unity3D\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/madewithunity?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#madewithunity\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shaders?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shaders\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shadergraph?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shadergraph\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/gamedev?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#gamedev\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/VFXFriday?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#VFXFriday\u003c/a\u003e \u003ca href=\&#34;https://t.co/8OKtK0pGyz\&#34;\u003epic.twitter.com/8OKtK0pGyz\u003c/a\u003e\u003c/p\u003e\u0026mdash; Cyan üéÉ (@Cyanilux) \u003ca href=\&#34;https://twitter.com/Cyanilux/status/1124280282285248512?ref_src=twsrc%5Etfw\&#34;\u003eMay 3, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\&#34;https://platform.twitter.com/widgets.js\&#34; charset=\&#34;utf-8\&#34;\u003e\u003c/script\u003e\n&#34;);}else{document.write(&#34;https://twitter.com/Cyanilux/status/1124280282285248512&#34;+&#34;Cookies are not accepted so cannot show embedded tweet.
&#34;+&#34;Click here to show cookie dialog if you want to change that
&#34;);} Intro This portal/wormhole shader is based on manipulating polar coordinates to create a spiralling effect.</description>
    </item>
    
    <item>
      <title>Liquid Shader Breakdown</title>
      <link>https://www.cyanilux.com/tutorials/liquid-shader-breakdown/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/tutorials/liquid-shader-breakdown/</guid>
      <description>if (cookiesAccepted){document.write(&#34;\u003cblockquote class=\&#34;twitter-tweet\&#34; data-dnt=\&#34;true\&#34; data-theme=\&#34;dark\&#34;\u003e\u003cp lang=\&#34;en\&#34; dir=\&#34;ltr\&#34;\u003eI tweeted a liquid shader like this at the start of the year, but I never shared the \u003ca href=\&#34;https://twitter.com/hashtag/shadergraph?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shadergraph\u003c/a\u003e (see thread).ü•§I\u0026#39;m also working on something more interesting which uses this technique, which I\u0026#39;ll tweet in a few days or so! üòÄ \u003ca href=\&#34;https://twitter.com/hashtag/unity3D?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#unity3D\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/madewithunity?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#madewithunity\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/shaders?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#shaders\u003c/a\u003e \u003ca href=\&#34;https://twitter.com/hashtag/gamedev?src=hash\u0026amp;ref_src=twsrc%5Etfw\&#34;\u003e#gamedev\u003c/a\u003e \u003ca href=\&#34;https://t.co/wausClRGDY\&#34;\u003epic.twitter.com/wausClRGDY\u003c/a\u003e\u003c/p\u003e\u0026mdash; Cyan üéÉ (@Cyanilux) \u003ca href=\&#34;https://twitter.com/Cyanilux/status/1121049841617047557?ref_src=twsrc%5Etfw\&#34;\u003eApril 24, 2019\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\&#34;https://platform.twitter.com/widgets.js\&#34; charset=\&#34;utf-8\&#34;\u003e\u003c/script\u003e\n&#34;);}else{document.</description>
    </item>
    
    <item>
      <title>Contents</title>
      <link>https://www.cyanilux.com/contents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/contents/</guid>
      <description>Most of the tutorials below are for the Universal Render Pipeline (URP), but content may still work in the High Definition Render Pipeline (HDRP) too. It may need adjusting in some places due to HDRP using Camera-Relative rendering which makes World space relative to the camera position. Also note that the View Direction node is normalised in HDRP but not in URP.
Sections :
 Tutorial Breakdowns Tutorial Posts Twitter Threads   Tutorial Breakdowns (Tutorials breaking down how to create specific shader effects)</description>
    </item>
    
    <item>
      <title>Cookies &amp; Privacy</title>
      <link>https://www.cyanilux.com/cookies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.cyanilux.com/cookies/</guid>
      <description>Hello! This site uses cookies - small text files stored on your computer / mobile device. The site can read/write to these cookies allowing data to be saved between sessions. You can choose to accept or refuse these by using the banner at the bottom of the screen.
By accepting, the site will store a &amp;ldquo;cookiesAccepted:true&amp;rdquo; cookie to prevent the banner from re-appearing and enable the usage of the cookies outlined in the sections below.</description>
    </item>
    
  </channel>
</rss>
